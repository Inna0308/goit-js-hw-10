{"version":3,"file":"1-timer.js","sources":["../src/img/error-massage.svg","../src/js/1-timer.js"],"sourcesContent":["export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%3e%3cpath%20fill='%23FAFAFB'%20d='M6.81.219A.75.75%200%200%201%207.34%200h9.32a.75.75%200%200%201%20.53.219l6.591%206.591a.75.75%200%200%201%20.219.53v9.32a.75.75%200%200%201-.219.53l-6.591%206.591a.75.75%200%200%201-.53.219H7.34a.75.75%200%200%201-.53-.219L.219%2017.19A.75.75%200%200%201%200%2016.66V7.34a.75.75%200%200%201%20.219-.53L6.81.219ZM7.65%201.5%201.5%207.65v8.7l6.15%206.15h8.7l6.15-6.15v-8.7L16.35%201.5h-8.7Z'/%3e%3cpath%20fill='%23FAFAFB'%20d='M6.969%206.97a.75.75%200%200%201%201.062%200L12%2010.94l3.969-3.97a.75.75%200%201%201%201.062%201.061l-3.97%203.97%203.97%203.968a.753.753%200%200%201%200%201.062.749.749%200%200%201-1.062%200L12%2013.061l-3.969%203.97a.75.75%200%200%201-1.225-.243.751.751%200%200%201%20.163-.819L10.939%2012%206.97%208.031a.75.75%200%200%201%200-1.062Z'/%3e%3c/svg%3e\"","// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('button[data-start]');\nconst inputField = document.querySelector('#datetime-picker');\nconst daySpan = document.querySelector('span[data-days]');\nconst hourSpan = document.querySelector('span[data-hours]');\nconst minuteSpan = document.querySelector('span[data-minutes]');\nconst secondSpan = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\n\nimport icon from '../img/error-massage.svg';\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= Date.now()) {\n      iziToast.show({\n        iconUrl: `${icon}`,\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        titleColor: 'white',\n        titleSize: '16',\n        messageColor: 'white',\n        messageSize: '16',\n        backgroundColor: '#ef4040',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst startTimer = () => {\n  startBtn.disabled = true;\n  inputField.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const remainingTime = userSelectedDate - currentTime;\n\n    if (remainingTime <= 0) {\n      clearInterval(intervalId);\n\n      daysSpan.textContent = '00';\n      hoursSpan.textContent = '00';\n      minutesSpan.textContent = '00';\n      secondsSpan.textContent = '00';\n\n      inputField.disabled = false;\n      startBtn.disabled = false;\n      return;\n    }\n    const time = convertMs(remainingTime);\n    console.log(remainingTime);\n    console.log(time);\n    updateTimerDisplay(time);\n  }, 1000);\n};\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daySpan.textContent = addLeadingZero(days);\n  hourSpan.textContent = addLeadingZero(hours);\n  minuteSpan.textContent = addLeadingZero(minutes);\n  secondSpan.textContent = addLeadingZero(seconds);\n}\n\nstartBtn.addEventListener('click', startTimer);\n"],"names":["icon","startBtn","inputField","daySpan","hourSpan","minuteSpan","secondSpan","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","startTimer","intervalId","currentTime","remainingTime","time","updateTimerDisplay","addLeadingZero","value"],"mappings":"2GAAA,MAAeA,EAAA,u5BCUTC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAa,SAAS,cAAc,oBAAoB,EAE9D,IAAIC,EAIJN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,KAAK,OAC3BG,EAAS,KAAK,CACZ,QAAS,GAAGV,CAAI,GAChB,MAAO,QACP,QAAS,qCACT,SAAU,WACV,WAAY,QACZ,UAAW,KACX,aAAc,QACd,YAAa,KACb,gBAAiB,SACzB,CAAO,EACDC,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAa,IAAM,CACvBjB,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtB,MAAMiB,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACnBC,EAAgBd,EAAmBa,EAEzC,GAAIC,GAAiB,EAAG,CACtB,cAAcF,CAAU,EAExB,SAAS,YAAc,KACvB,UAAU,YAAc,KACxB,YAAY,YAAc,KAC1B,YAAY,YAAc,KAE1BjB,EAAW,SAAW,GACtBD,EAAS,SAAW,GACpB,MACD,CACD,MAAMqB,EAAOV,EAAUS,CAAa,EACpC,QAAQ,IAAIA,CAAa,EACzB,QAAQ,IAAIC,CAAI,EAChBC,EAAmBD,CAAI,CACxB,EAAE,GAAI,CACT,EAEA,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASF,EAAmB,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Dd,EAAQ,YAAcqB,EAAeV,CAAI,EACzCV,EAAS,YAAcoB,EAAeT,CAAK,EAC3CV,EAAW,YAAcmB,EAAeR,CAAO,EAC/CV,EAAW,YAAckB,EAAeP,CAAO,CACjD,CAEAhB,EAAS,iBAAiB,QAASiB,CAAU"}